"use strict";(self.webpackChunkgts_docs_new=self.webpackChunkgts_docs_new||[]).push([[3743],{8745:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>a,contentTitle:()=>d,default:()=>l,frontMatter:()=>o,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"spawner/configuration","title":"Configuration","description":"Basic Spawner","source":"@site/docs/spawner/configuration.md","sourceDirName":"spawner","slug":"/spawner/configuration","permalink":"/gts-docs/docs/spawner/configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/spawner/configuration.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"Configuration","sidebar_label":"Configuration","sidebar_position":4},"sidebar":"spawner","previous":{"title":"Adding Buses","permalink":"/gts-docs/docs/spawner/addingbuses"}}');var i=t(4848),r=t(8453);const o={title:"Configuration",sidebar_label:"Configuration",sidebar_position:4},d=void 0,a={},c=[{value:"Basic Spawner",id:"basic-spawner",level:2},{value:"How to configure buses",id:"how-to-configure-buses",level:3}];function h(e){const s={a:"a",h1:"h1",h2:"h2",h3:"h3",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h2,{id:"basic-spawner",children:"Basic Spawner"}),"\n",(0,i.jsx)(s.h3,{id:"how-to-configure-buses",children:"How to configure buses"}),"\n",(0,i.jsx)(s.h1,{id:"attributes",children:"Attributes"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Name"}),(0,i.jsx)(s.th,{children:"Type"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Model"}),(0,i.jsx)(s.td,{children:"String"}),(0,i.jsx)(s.td,{children:"This the Model of the bus. (Ex: 2022 BBV)"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"OwnerID"}),(0,i.jsx)(s.td,{children:"Number"}),(0,i.jsx)(s.td,{children:"This is the UserID of the owner, make sure IsAssigned is set to true if it's an assigned bus."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"IsAssigned"}),(0,i.jsx)(s.td,{children:"Boolean"}),(0,i.jsx)(s.td,{children:"Set this to true if this is assigned to a specific member, make sure to set the OwnerID as well."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"IsGamepass"}),(0,i.jsx)(s.td,{children:"Boolean"}),(0,i.jsx)(s.td,{children:"Set this to true if this is assigned to a specific gamepass, make sure to set the GamepassID as well."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"GamepassID"}),(0,i.jsx)(s.td,{children:"Number"}),(0,i.jsx)(s.td,{children:"This is the GamepassID of the Gamepass"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"BusImage"}),(0,i.jsx)(s.td,{children:"Image"}),(0,i.jsx)(s.td,{children:"This is the imageID for the bus image, make sure it says rbxassetid://(ImageId)"})]})]})]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"https://discord.gg/5k85S4KWSR",children:"All Set! If you need more help, head on over to our discord server."})})]})}function l(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>d});var n=t(6540);const i={},r=n.createContext(i);function o(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);